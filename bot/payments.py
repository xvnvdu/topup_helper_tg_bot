from math import ceil
from aiogram import Bot, Router
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext

from config import yookassa_test_token
from .main_bot import pending_payments, pending_payments_info
from aiogram.types import LabeledPrice, Message, InlineKeyboardButton, InlineKeyboardMarkup


router = Router()


''' –ü–û–ü–û–õ–ù–ï–ù–ò–ï TG STARS '''

async def stars_payment(call: CallbackQuery, bot: Bot):
    user_id = call.from_user.id
    amount_rub = int(call.data.split('_')[0])
    amount_stars = ceil(amount_rub / 1.5)

    link = await bot.create_invoice_link(
        title=f'–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ {amount_rub}‚ÇΩ',
        description='description',
        provider_token='',
        currency='XTR',
        prices=[LabeledPrice(label='–û–ø–ª–∞—Ç–∞', amount=amount_stars)],
        payload='invoice'
    )
    pending_payments[user_id] = amount_rub
    pending_payments_info[user_id] = '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ ‚Äî Stars'
    stars_payment_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f'–ü–æ–ø–æ–ª–Ω–∏—Ç—å –Ω–∞ {amount_rub}‚ÇΩ ({amount_stars} ‚≠êÔ∏è)', url=link)],
        [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å—É–º–º—É', callback_data='stars')]
    ])
    await call.message.edit_text('<strong>‚≠êÔ∏è –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:</strong>',
                                 parse_mode='HTML', reply_markup=stars_payment_keyboard)


async def stars_custom(message: Message, bot: Bot, state: FSMContext):
    user_id = message.from_user.id
    
    pending_payments[user_id] = int(pending_payments[user_id])
    amount = pending_payments[user_id]
    pending_payments_info[user_id] = '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ ‚Äî Stars'
    
    stars_amount = ceil(amount/1.5)
    custom_stars_link = await bot.create_invoice_link(
        title=f'–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ {amount}‚ÇΩ',
        description=' ',
        provider_token=yookassa_test_token,
        currency='XTR',
        prices=[LabeledPrice(label='–û–ø–ª–∞—Ç–∞', amount=stars_amount)],
        payload='invoice'
    )
    custom_stars_payment = [
        [InlineKeyboardButton(text=f'–ü–æ–ø–æ–ª–Ω–∏—Ç—å –Ω–∞ {amount}‚ÇΩ ({stars_amount} ‚≠êÔ∏è)', url=custom_stars_link)],
        [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å—É–º–º—É', callback_data='stars')]
    ]
    custom_stars_keyboard = InlineKeyboardMarkup(inline_keyboard=custom_stars_payment)
    await message.answer('<strong>‚≠êÔ∏è –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:</strong>',
                                 parse_mode='HTML', reply_markup=custom_stars_keyboard)


''' –ü–û–ü–û–õ–ù–ï–ù–ò–ï –Æ–ö–ê–°–°–ê '''

async def rub_payment(call: CallbackQuery, bot: Bot):
    # user_id = call.from_user.id
    # amount_rub = int(call.data.split('_')[0])
    
    # link = await bot.create_invoice_link(
    #     title=f'–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ {amount_rub}‚ÇΩ',
    #     description=' ',
    #     provider_token=yookassa_test_token,
    #     currency='RUB',
    #     prices=[LabeledPrice(label='–û–ø–ª–∞—Ç–∞', amount=100*100)],
    #     payload='invoice'
    # )
    # pending_payments[user_id] = amount_rub
    # pending_payments_info[user_id] = '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ ‚Äî –ÆKassa'
    
    rub_payment_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        # [InlineKeyboardButton(text=f'–ü–æ–ø–æ–ª–Ω–∏—Ç—å –Ω–∞ {amount_rub}‚ÇΩ üíµ', url=link)],
        # [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å—É–º–º—É', callback_data='YK')]
        [InlineKeyboardButton(text='‚Üê –ù–∞–∑–∞–¥', callback_data='YK')]
    ])
    await call.message.edit_text('<s><strong>üí≥ –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:</strong></s>\n\n'
                                 '<b>‚õîÔ∏è –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ</b>',
                                 parse_mode='HTML', reply_markup=rub_payment_keyboard)


async def rub_custom(message: Message, bot: Bot, state: FSMContext):
    user_id = message.from_user.id
    pending_payments[user_id] = int(pending_payments[user_id])
    amount = pending_payments[user_id]
    pending_payments_info[user_id] = '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ ‚Äî –ÆKassa'
    
    custom_rub_link = await bot.create_invoice_link(
        title=f'–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ {amount}‚ÇΩ',
        description=' ',
        provider_token=yookassa_test_token,
        currency='RUB',
        prices=[LabeledPrice(label='–û–ø–ª–∞—Ç–∞', amount=amount*100)],
        payload='invoice'
    )
    custom_rub_payment = [
        [InlineKeyboardButton(text=f'–ü–æ–ø–æ–ª–Ω–∏—Ç—å –Ω–∞ {amount}‚ÇΩ üíµ', url=custom_rub_link)],
        [InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å—É–º–º—É', callback_data='YK')]
    ]
    custom_rub_keyboard = InlineKeyboardMarkup(inline_keyboard=custom_rub_payment)
    await message.answer('<strong>üí≥ –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:</strong>',
                                 parse_mode='HTML', reply_markup=custom_rub_keyboard)
