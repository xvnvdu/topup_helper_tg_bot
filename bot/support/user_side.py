from aiogram import Bot
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message

from .save_data import save_question
from .page_texts import user_page_text, admin_page_text

from config import admin
from logger import logger
from bot.main_bot import Support, get_time, support_data_dict, id_generator
from bot.bot_buttons import continue_application_keyboard, answer_message_keyboard, support_keyboard, cancel_application_keyboard


async def bot_support(call: CallbackQuery):
    await call.message.edit_text('<strong>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ TopUp Helper ü§ñ</strong>\n\n'
                                 '<b>–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏:</b>\n'
                                 'üêû <i>–°—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å —Å –±–∞–≥–æ–º\n'
                                 '‚õìÔ∏è‚Äçüí• –û–±–Ω–∞—Ä—É–∂–∏–ª–∏ —É—è–∑–≤–∏–º–æ—Å—Ç—å\n'
                                 'üõ† –í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–±–æ—Ç–æ–π –±–æ—Ç–∞\n'
                                 'üí¨ –ï—Å—Ç—å –∏–¥–µ–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é\n'
                                 '‚ùî –ü–æ—è–≤–∏–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã (–ª—é–±—ã–µ, –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ –±–æ—Ç–∞)</i>', parse_mode='HTML', 
                                 reply_markup=support_keyboard)
    

async def message_to_support(message: Message, bot: Bot, state: FSMContext):
    user_id = message.from_user.id
    user_message = message.text
    
    number = await id_generator()
    
    logger.info(f'–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} | –û–±—Ä–∞—â–µ–Ω–∏–µ {number}: {user_message}')
    
    text = await admin_page_text(number, user_id, user_message)
    today, time_now = await get_time()
    
    await save_question(user_id, number, today, time_now, user_message)
        
    await message.answer(f'‚úÖ <b>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!</b> #{number}\n<i>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n'
                         '–ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ –æ–¥–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É, –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞ –∏, '
                         '–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –¥–∏–∞–ª–æ–≥ –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è.</i>', parse_mode='HTML')
    await state.clear()
    
    await bot.send_message(chat_id=admin, text=text, parse_mode='HTML', reply_markup=answer_message_keyboard(user_id, number, today, time_now))
    
    
async def continue_application(call: CallbackQuery, state: FSMContext):
    await state.set_state(Support.continue_application)
    
    user_id = call.data.split('_')[2]
    number = call.data.split('_')[3]
    today = call.data.split('_')[4]
    time_now = call.data.split('_')[5]
    
    await state.update_data(user_id=user_id)
    await state.update_data(number=number)
    await state.update_data(today=today)
    
    await call.message.edit_text(f'<b>‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ä–∞–º–∫–∞—Ö –æ–±—Ä–∞—â–µ–Ω–∏—è #{number}</b>', parse_mode='HTML', 
                                 reply_markup=cancel_application_keyboard(user_id, number, today, time_now))
 
 
async def cancel_application(call: CallbackQuery, state: FSMContext):
    user_id = call.data.split('_')[2]
    number = call.data.split('_')[3]
    today = call.data.split('_')[4]
    time_now = call.data.split('_')[5]
    
    support_message = support_data_dict[int(user_id)]['Dialogs'][number][today][time_now]['answer']
    text = await user_page_text(number, support_message)
    
    await call.message.edit_text(text, parse_mode='HTML', reply_markup=continue_application_keyboard(user_id, number, today, time_now))
    await state.clear()
 
 
async def send_application(message: Message, bot: Bot, state: FSMContext):
	application = message.text

	data = await state.get_data()
	user_id = int(data.get('user_id'))
	number = data.get('number')
	today, time_now = await get_time()

	text = await admin_page_text(number, user_id, application)

	logger.info(f'–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} | –û–±—Ä–∞—â–µ–Ω–∏–µ {number}: {application}')

	await save_question(user_id, number, today, time_now, application)

	await bot.send_message(chat_id=admin, text=text, parse_mode='HTML', reply_markup=answer_message_keyboard(user_id, number, today, time_now))
	await message.answer(f'‚úÖ –û—Ç–≤–µ—Ç –≤ —Ä–∞–º–∫–∞—Ö –æ–±—Ä–∞—â–µ–Ω–∏—è #{number} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!')

	await state.clear()
    